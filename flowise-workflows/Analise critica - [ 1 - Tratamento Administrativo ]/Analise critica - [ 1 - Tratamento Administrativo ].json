{"nodes":[{"id":"chatOpenAI_0","position":{"x":576.0502290812972,"y":-1058.184747028973},"type":"customNode","data":{"loadMethods":{},"label":"ChatOpenAI","name":"chatOpenAI","version":8,"type":"ChatOpenAI","icon":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/openai.svg","category":"Chat Models","description":"Wrapper around OpenAI large language models that use the Chat endpoint","baseClasses":["ChatOpenAI","BaseChatModel","BaseLanguageModel","Runnable"],"credential":"a0fffb09-1722-4f82-8532-e2bba4363b32","inputs":{"cache":"","modelName":"gpt-4o-mini","temperature":"0.2","streaming":true,"maxTokens":"","topP":"","frequencyPenalty":"","presencePenalty":"","timeout":"","basepath":"","proxyUrl":"","stopSequence":"","baseOptions":"","allowImageUploads":"","imageResolution":"low"},"filePath":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/chatmodels/ChatOpenAI/ChatOpenAI.js","inputAnchors":[{"label":"Cache","name":"cache","type":"BaseCache","optional":true,"id":"chatOpenAI_0-input-cache-BaseCache"}],"inputParams":[{"label":"Connect Credential","name":"credential","type":"credential","credentialNames":["openAIApi"],"id":"chatOpenAI_0-input-credential-credential"},{"label":"Model Name","name":"modelName","type":"asyncOptions","loadMethod":"listModels","default":"gpt-4o-mini","id":"chatOpenAI_0-input-modelName-asyncOptions"},{"label":"Temperature","name":"temperature","type":"number","step":0.1,"default":0.9,"optional":true,"id":"chatOpenAI_0-input-temperature-number"},{"label":"Streaming","name":"streaming","type":"boolean","default":true,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-streaming-boolean"},{"label":"Max Tokens","name":"maxTokens","type":"number","step":1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-maxTokens-number"},{"label":"Top Probability","name":"topP","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-topP-number"},{"label":"Frequency Penalty","name":"frequencyPenalty","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-frequencyPenalty-number"},{"label":"Presence Penalty","name":"presencePenalty","type":"number","step":0.1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-presencePenalty-number"},{"label":"Timeout","name":"timeout","type":"number","step":1,"optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-timeout-number"},{"label":"BasePath","name":"basepath","type":"string","optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-basepath-string"},{"label":"Proxy Url","name":"proxyUrl","type":"string","optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-proxyUrl-string"},{"label":"Stop Sequence","name":"stopSequence","type":"string","rows":4,"optional":true,"description":"List of stop words to use when generating. Use comma to separate multiple stop words.","additionalParams":true,"id":"chatOpenAI_0-input-stopSequence-string"},{"label":"BaseOptions","name":"baseOptions","type":"json","optional":true,"additionalParams":true,"id":"chatOpenAI_0-input-baseOptions-json"},{"label":"Allow Image Uploads","name":"allowImageUploads","type":"boolean","description":"Allow image input. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/uploads#image\" target=\"_blank\">docs</a> for more details.","default":false,"optional":true,"id":"chatOpenAI_0-input-allowImageUploads-boolean"},{"label":"Image Resolution","description":"This parameter controls the resolution in which the model views the image.","name":"imageResolution","type":"options","options":[{"label":"Low","name":"low"},{"label":"High","name":"high"},{"label":"Auto","name":"auto"}],"default":"low","optional":false,"additionalParams":true,"id":"chatOpenAI_0-input-imageResolution-options"}],"outputs":{},"outputAnchors":[{"id":"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable","name":"chatOpenAI","label":"ChatOpenAI","description":"Wrapper around OpenAI large language models that use the Chat endpoint","type":"ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"}],"id":"chatOpenAI_0","selected":false},"width":300,"height":670,"selected":false,"positionAbsolute":{"x":576.0502290812972,"y":-1058.184747028973},"dragging":false},{"id":"bufferMemory_0","position":{"x":584.7812195437645,"y":-319.4344981148087},"type":"customNode","data":{"label":"Buffer Memory","name":"bufferMemory","version":2,"type":"BufferMemory","icon":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/memory/BufferMemory/memory.svg","category":"Memory","description":"Retrieve chat messages stored in database","baseClasses":["BufferMemory","BaseChatMemory","BaseMemory"],"inputs":{"sessionId":"","memoryKey":"chat_history"},"filePath":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/memory/BufferMemory/BufferMemory.js","inputAnchors":[],"inputParams":[{"label":"Session Id","name":"sessionId","type":"string","description":"If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory#ui-and-embedded-chat\">more</a>","default":"","additionalParams":true,"optional":true,"id":"bufferMemory_0-input-sessionId-string"},{"label":"Memory Key","name":"memoryKey","type":"string","default":"chat_history","additionalParams":true,"id":"bufferMemory_0-input-memoryKey-string"}],"outputs":{},"outputAnchors":[{"id":"bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory","name":"bufferMemory","label":"BufferMemory","description":"Retrieve chat messages stored in database","type":"BufferMemory | BaseChatMemory | BaseMemory"}],"id":"bufferMemory_0","selected":false},"width":300,"height":253,"selected":false,"dragging":false,"positionAbsolute":{"x":584.7812195437645,"y":-319.4344981148087}},{"id":"stickyNote_0","position":{"x":1827.9390763390045,"y":-1179.682900397102},"type":"stickyNote","data":{"label":"Sticky Note","name":"stickyNote","version":2,"type":"StickyNote","icon":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/utilities/StickyNote/stickyNote.svg","category":"Utilities","tags":["Utilities"],"description":"Add a sticky note","inputs":{"note":"Prompt base\n\nAnalise o json de dados fornecida e extraia as seguintes informações:\n\n1. **Nome do modelo LPCO**: Retorne somente o valor da coluna nome do modelo LPCO, sem incluir o texto \"Nome do modelo LPCO:\".\n2. **TA e Código do Modelo**: Retorne \"TA: \" seguido do valor do TA, e \"Código do Modelo: \" seguido do código do modelo.\n3. **Tratamento Administrativo**:\n   - Se a coluna \"Tipo de TA\" contém \"Impede registro\" **e** a coluna \"Tipo de impedimento\" contém \"Requer LI\", considere \"Impede registro de DUIMP – Requer LI\" como a conclusão.\n4. **Ressalva obrigatória**: Sempre adicione o seguinte aviso ao final do retorno:\nATENÇÃO: Esta consulta não substitui o tratamento administrativo aplicável no momento do registro da DUIMP.\n\n5. **Retorno HTML**: Retorne os resultados em formato HTML. Utilize uma tabela com uma única coluna chamada **\"TRATAMENTO ADMINISTRATIVO\"**. Para cada entrada do tipo 1 e 2, siga este formato:\n   - “Nome_do_modelo_LPCO (TA: valor_TA, Código do modelo: valor_Código)”\n   \nPara o tratamento administrativo (tipo 3), siga este formato:\n   - \"Nome_do_modelo_LPCO (TA: valor_TA, Código do modelo: valor_Código) - Impede registro de DUIMP - Requer LI\"\n\nAdicione o aviso ao final do resultado.\n\nsiga este exemplo, retorne em html puro, sem precisar explicar sua resposta:\n\n<html>\n<body>\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n  <tbody>\n    <!-- Exemplo de preenchimento dinâmico -->\n    <tr>\n      <td>\"Modelo XYZ\" (TA: \"1234\", Código do modelo: \"5678\")</td>\n    </tr>\n    <tr>\n      <td>\"Modelo ABC\" (TA: \"1234\", Código do modelo: \"5678\") - Impede registro de DUIMP - Requer LI</td>\n    </tr>\n    \"<!-- Mais linhas de dados -->\"\n    <tr>\n      <td style=\"font-weight: bold;\">ATENÇÃO: Esta consulta não substitui o tratamento administrativo aplicável no momento do registro da DUIMP.</td>\n    </tr>\n  </tbody>\n</table>\n</body>\n</html>"},"baseClasses":["StickyNote"],"filePath":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/utilities/StickyNote/StickyNote.js","inputAnchors":[],"inputParams":[{"label":"","name":"note","type":"string","rows":1,"placeholder":"Type something here","optional":true,"id":"stickyNote_0-input-note-string"}],"outputs":{},"outputAnchors":[{"id":"stickyNote_0-output-stickyNote-StickyNote","name":"stickyNote","label":"StickyNote","description":"Add a sticky note","type":"StickyNote"}],"id":"stickyNote_0","selected":false},"width":300,"height":1511,"selected":false,"dragging":false,"positionAbsolute":{"x":1827.9390763390045,"y":-1179.682900397102}},{"id":"conversationalAgent_0","position":{"x":1194.754472343053,"y":-794.2894208400205},"type":"customNode","data":{"label":"Conversational Agent","name":"conversationalAgent","version":3,"type":"AgentExecutor","category":"Agents","icon":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalAgent/agent.svg","description":"Conversational agent for a chat model. It will utilize chat specific prompts","baseClasses":["AgentExecutor","BaseChain","Runnable"],"inputs":{"tools":"","model":"{{chatOpenAI_0.data.instance}}","memory":"{{bufferMemory_0.data.instance}}","systemMessage":"Você receberá um objeto JSON contendo informações sobre diferentes órgãos reguladores (como ANVISA, DECEX, DFPC, etc.). Para cada objeto principal (como ANVISA, DECEX, DFPC), siga a ordem de impressão abaixo:\n\n- Preencha o nome do orgão anunte no <p></p> com o nome do órgão (como ANVISA, DECEX, DFPC, ANP, etc) e siga os passos abaixo, para os orgãos encontrados no JSON.\n- Liste primeiramente os elementos do campo 'tas', um por um. Mantendo a ordem e removendo quaisquer símbolos \"-\" repetidos desnecessários entre os elementos.\n- Liste segundamente os elementos do campo 'excecoes' logo após os tas, um por um, mantendo a ordem e removendo quaisquer simbolos \"-\" repetidos desnecessários entre os elementos.\n- Liste terceiramente os elementos do campo 'proibidos', um por um, mantendo a ordem e removendo quaisquer simbolos \"-\" repetidos desnecessários entre os elementos.\n- Caso algum campo como tas, excecoes, ou proibidos esteja vazio, ele deve ser ignorado. Não gere o título para tas, excecoes ou proibidos, a ordem de listagem é simplesmente para padronização.\n\nSiga este exemplo, retorne em html puro, sem precisar explicar sua resposta:\n<html>\n<body>\n<p><strong>ANVISA</strong></p>\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n  <tbody>\n    <!-- Exemplo de preenchimento dinâmico -->\n    <tr>\n      <td>Modelo XYZ  - Requer LPCO (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <tr>\n      <td>Modelo ABC - Requer LI (Impede registro de DUIMP) (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <tr>\n      <td>Produto sujeito a XPTO com nome alternativo - Requer LI (Impede registro de DUIMP) (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <!-- Mais linhas de dados -->\n    <tr>\n    </tr>\n  </tbody>\n</table>\n<p><strong>ANP</strong></p>\n<table border=\"1\" cellpadding=\"10\" cellspacing=\"0\" style=\"border-collapse: collapse; width: 100%;\">\n  <tbody>\n    <!-- Exemplo de preenchimento dinâmico -->\n    <tr>\n      <td>Modelo XYZ  - Requer LPCO (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <tr>\n      <td>Modelo ABC - Requer LI (Impede registro de DUIMP) (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <tr>\n      <td>Produto sujeito a XPTO com nome alternativo - Requer LI (Impede registro de DUIMP) (TA: 1234, Código do modelo: 5678) </td>\n    </tr>\n    <!-- Mais linhas de dados -->\n    <tr>\n    </tr>\n  </tbody>\n</table>\n    <!-- Demais tabelas por orgão anuente -->\n</body>\n</html>\n","inputModeration":"","maxIterations":""},"filePath":"/usr/local/lib/node_modules/flowise/node_modules/flowise-components/dist/nodes/agents/ConversationalAgent/ConversationalAgent.js","inputAnchors":[{"label":"Allowed Tools","name":"tools","type":"Tool","list":true,"id":"conversationalAgent_0-input-tools-Tool"},{"label":"Chat Model","name":"model","type":"BaseChatModel","id":"conversationalAgent_0-input-model-BaseChatModel"},{"label":"Memory","name":"memory","type":"BaseChatMemory","id":"conversationalAgent_0-input-memory-BaseChatMemory"},{"label":"Input Moderation","description":"Detect text that could generate harmful output and prevent it from being sent to the language model","name":"inputModeration","type":"Moderation","optional":true,"list":true,"id":"conversationalAgent_0-input-inputModeration-Moderation"}],"inputParams":[{"label":"System Message","name":"systemMessage","type":"string","rows":4,"default":"Assistant is a large language model trained by OpenAI.\n\nAssistant is designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, Assistant is able to generate human-like text based on the input it receives, allowing it to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nAssistant is constantly learning and improving, and its capabilities are constantly evolving. It is able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. Additionally, Assistant is able to generate its own text based on the input it receives, allowing it to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, Assistant is a powerful system that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether you need help with a specific question or just want to have a conversation about a particular topic, Assistant is here to assist.","optional":true,"additionalParams":true,"id":"conversationalAgent_0-input-systemMessage-string"},{"label":"Max Iterations","name":"maxIterations","type":"number","optional":true,"additionalParams":true,"id":"conversationalAgent_0-input-maxIterations-number"}],"outputs":{},"outputAnchors":[{"id":"conversationalAgent_0-output-conversationalAgent-AgentExecutor|BaseChain|Runnable","name":"conversationalAgent","label":"AgentExecutor","description":"Conversational agent for a chat model. It will utilize chat specific prompts","type":"AgentExecutor | BaseChain | Runnable"}],"id":"conversationalAgent_0","selected":false},"width":300,"height":435,"selected":true,"dragging":false,"positionAbsolute":{"x":1194.754472343053,"y":-794.2894208400205}}],"edges":[{"source":"chatOpenAI_0","sourceHandle":"chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable","target":"conversationalAgent_0","targetHandle":"conversationalAgent_0-input-model-BaseChatModel","type":"buttonedge","id":"chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-conversationalAgent_0-conversationalAgent_0-input-model-BaseChatModel"},{"source":"bufferMemory_0","sourceHandle":"bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory","target":"conversationalAgent_0","targetHandle":"conversationalAgent_0-input-memory-BaseChatMemory","type":"buttonedge","id":"bufferMemory_0-bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory-conversationalAgent_0-conversationalAgent_0-input-memory-BaseChatMemory"}],"viewport":{"x":439.19344237598153,"y":771.8237891546605,"zoom":0.5516237797753237}}