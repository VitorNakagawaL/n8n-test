{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "structureMessage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dataCriticalAnalysis": {
      "main": [
        [
          {
            "node": "downloadSpreadsheetGecex",
            "type": "main",
            "index": 0
          },
          {
            "node": "downloadSpreadsheetTipi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "downloadSpreadsheetGecex": {
      "main": [
        [
          {
            "node": "extractDataFromFileGecex",
            "type": "main",
            "index": 0
          },
          {
            "node": "extractDataFromFileGecex1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "downloadSpreadsheetTipi": {
      "main": [
        [
          {
            "node": "extractDataFromFileTipi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extractDataFromFileGecex": {
      "main": [
        [
          {
            "node": "mergeDataFromFilesGecexTipi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extractDataFromFileTipi": {
      "main": [
        [
          {
            "node": "mergeDataFromFilesGecexTipi",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "checkIfFindNcmInList": {
      "main": [
        [
          {
            "node": "logicForFindingExceptions",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "responseWhenCantFindNcm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "logicForFindingExceptions": {
      "main": [
        [
          {
            "node": "convertToFile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extractDataFromFileGecex1": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        []
      ]
    },
    "structureMessage": {
      "main": [
        [
          {
            "node": "getPIS/COFINS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getPIS/COFINS": {
      "main": [
        [
          {
            "node": "RegexHTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RegexHTML": {
      "main": [
        [
          {
            "node": "dataCriticalAnalysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mergeDataFromFilesGecexTipi": {
      "main": [
        [
          {
            "node": "checkIfFindNcmInList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convertToFile": {
      "main": [
        [
          {
            "node": "extractFromFile",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extractFromFile": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "responseWhenCantFindNcm": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "responseFlowise",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "responseFlowise": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-18T19:51:43.270Z",
  "id": "xrDnFN9iuq8sJ5Ou",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[prod] - Análise crítica | 2 - Tratamento tributário - Tributos e contribuições federais",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "74b138dd-f2fe-4203-b116-0aac97b9017e",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1660,
        820
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "criticalAnalysisSecondStep",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "a22e00b2-d1a9-4dad-b1c4-34f529da05cc",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1360,
        820
      ],
      "webhookId": "2de5b84f-236f-453a-b0d1-c56abceeb6d4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1d042684-e288-47e4-8362-7867fbcccfe4",
              "name": "=NCM",
              "value": "={{ $('structureMessage').item.json.NCM }}",
              "type": "string"
            },
            {
              "id": "009162b6-503f-4e2a-bf76-a489575b1d4f",
              "name": "peso_bruto_estimado",
              "value": "={{ $('structureMessage').item.json['Peso bruto estimado'] }}",
              "type": "string"
            },
            {
              "id": "45840199-ce95-4dab-95e7-2fe6ed0ccb92",
              "name": "M3 estimada/quantidade de volumes e dimensões",
              "value": "={{ $('structureMessage').item.json['M3 estimada/quantidade de volumes e dimensões'] }}",
              "type": "string"
            },
            {
              "id": "173088ac-d7d2-4913-956c-aa72ed035438",
              "name": "pais_origem_fabricacao",
              "value": "={{ $('structureMessage').item.json['País de origem/fabricação'] }}",
              "type": "string"
            },
            {
              "id": "f3389d5d-accb-47bd-bc2e-dd79a4ecfba8",
              "name": "pais_embarque",
              "value": "={{ $('structureMessage').item.json['País de embarque'] }}",
              "type": "string"
            },
            {
              "id": "b72a6b03-82f1-4d9a-926b-e3ab3629c91f",
              "name": "estado_importador",
              "value": "={{ $('structureMessage').item.json['Estado do Importador'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "504b1457-7487-4231-b2f2-d57aef9fa29c",
      "name": "dataCriticalAnalysis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -600,
        820
      ]
    },
    {
      "parameters": {
        "url": "https://www.gov.br/mdic/pt-br/assuntos/camex/estrategia-comercial/arquivos-listas/25-09-2024-anexos-i-a-ix-resolucao-gecex-272-21.xlsx",
        "options": {}
      },
      "id": "15721dda-d371-4ba9-a223-cac0259cca01",
      "name": "downloadSpreadsheetGecex",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -400,
        620
      ]
    },
    {
      "parameters": {
        "url": "https://www.gov.br/receitafederal/pt-br/acesso-a-informacao/legislacao/documentos-e-arquivos/tipi.xlsx",
        "options": {}
      },
      "id": "c251cbd9-5d66-4675-96ef-4d62ffc7517e",
      "name": "downloadSpreadsheetTipi",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -380,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "headerRow": true,
          "includeEmptyCells": true,
          "range": "2",
          "sheetName": "Anexo II - Diferentes da TEC"
        }
      },
      "id": "c306b478-ba6c-4b13-9614-dae6310f3d3f",
      "name": "extractDataFromFileGecex",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -160,
        480
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "headerRow": true,
          "includeEmptyCells": true,
          "range": "7",
          "sheetName": "Tabela Completa"
        }
      },
      "id": "e5ede9ec-29dc-4b0f-9800-1057b3917cd5",
      "name": "extractDataFromFileTipi",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -160,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "d27eedb8-0904-4c10-a495-6cc4d33981a9",
              "leftValue": "={{ $json['NCM'].replace(/\\./g, '').toString() }}",
              "rightValue": "={{ $('dataCriticalAnalysis').first().json.NCM.replace(/\\./g, '').toString() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "c1ae2fa6-3b1d-43a7-9b5b-fba603276336",
              "leftValue": "={{ $json['NCM '].replace(/\\./g, '').toString() }}",
              "rightValue": "={{ $('dataCriticalAnalysis').first().json.NCM.replace(/\\./g, '').toString() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8313fac0-af86-4086-9daa-e5f170b6bb5b",
      "name": "checkIfFindNcmInList",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        420,
        820
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst data = $('checkIfFindNcmInList').all()\nlet has_exception = false;\nlet productTax;\n\nfor (const item of $input.all()) {\n  let cont = 0;\n  if (cont === 0){\n    for (const item of $input.all()) {\n      if (typeof item.json.EX === 'number'){\n        has_exception = true;\n      }\n      if (typeof item.json.EX !== 'number' && (typeof item.json['ALÍQUOTA (%)'] === 'string' || typeof item.json['ALÍQUOTA (%)'] === 'number')){\n        productTax = item.json['ALÍQUOTA (%)'];\n      }\n    }\n  }\n\n  cont++;\n  item.json.hasException = has_exception;\n  item.json.productTax = productTax;\n}\n\nreturn $input.all();"
      },
      "id": "9a325a77-d72e-4a50-80c8-d0431c057ff7",
      "name": "logicForFindingExceptions",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00ed4fa4-c4b4-4442-8e3b-b69ec3479c09",
              "name": "output",
              "value": "NCM não foi encontrado na base de dados",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "eb785a2d-840b-44de-a892-2fab35bdf7f6",
      "name": "responseWhenCantFindNcm",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        660,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "headerRow": true,
          "includeEmptyCells": true,
          "range": "3",
          "sheetName": "Anexo IV - Desabastecimento"
        }
      },
      "id": "65448950-398a-483a-aeb5-158dd8d40a1e",
      "name": "extractDataFromFileGecex1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -160,
        820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c865c732-0745-419f-bf88-bec86a2b94cd",
              "leftValue": "={{ $json.NCM.replace(/\\./g, '') }}",
              "rightValue": "={{ $('dataCriticalAnalysis').first().json.NCM.replace(/\\./g, '').toString() }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1364a085-fe3d-4698-8871-083d0537219b",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        0,
        820
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const parsedJson = JSON.parse($json.body);\n\n\nreturn parsedJson"
      },
      "id": "fff65c89-f73d-4a55-b550-f5c91f045ae1",
      "name": "structureMessage",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1200,
        820
      ],
      "notesInFlow": false,
      "executeOnce": false,
      "retryOnFail": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www4.receita.fazenda.gov.br/simulador/Simulacao-tag.jsp",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
            },
            {
              "name": "Accept-Language",
              "value": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7"
            },
            {
              "name": "Cache-Control",
              "value": "max-age=0"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Origin",
              "value": "https://www4.receita.fazenda.gov.br"
            },
            {
              "name": "Referer",
              "value": "https://www4.receita.fazenda.gov.br/simulador/BuscaNCM.jsp"
            },
            {
              "name": "Sec-Fetch-Dest",
              "value": "document"
            },
            {
              "name": "Sec-Fetch-Mode",
              "value": "navigate"
            },
            {
              "name": "Sec-Fetch-Site",
              "value": "same-origin"
            },
            {
              "name": "Sec-Fetch-User",
              "value": "?1"
            },
            {
              "name": "Upgrade-Insecure-Requests",
              "value": "1"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
            },
            {
              "name": "sec-ch-ua",
              "value": "\"Google Chrome\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\""
            },
            {
              "name": "sec-ch-ua-mobile",
              "value": "?0"
            },
            {
              "name": "sec-ch-ua-platform",
              "value": "\"macOS\""
            },
            {
              "name": "cookie",
              "value": "JSESSIONID=0000MtTgxJh6ggC2C11BCdcWr20%3AD9629B8180C40E66000006C00000000100000000;"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "origem",
              "value": "buscaNCM"
            },
            {
              "name": "codNCM",
              "value": "={{ $('structureMessage').item.json.NCM.replaceAll(\".\", \"\") }}"
            },
            {
              "name": "valorAduaneiro",
              "value": "0,00"
            },
            {
              "name": "moeda",
              "value": "790"
            },
            {
              "name": "h-captcha-response",
              "value": "0"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "1ddc8ac9-9e98-4e47-93e1-d3f059a62f67",
      "name": "getPIS/COFINS",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        820
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Obtém o HTML da entrada\nconst html = $json.data;\n\n// Regex para capturar os valores diretamente do atributo value\nconst pisRegex = /<input[^>]*name=\"aliqPIS\"[^>]*value=['\"]([\\d.,]+)['\"]/i;\nconst cofinsRegex = /<input[^>]*name=\"aliqCOFINS\"[^>]*value=['\"]([\\d.,]+)['\"]/i;\nconst ipiRegex = /<input[^>]*name=\"aliqIPI\"[^>]*value=['\"]([\\d.,]+)['\"]/i;\nconst iiRegex = /<input[^>]*name=\"aliqII\"[^>]*value=['\"]([\\d.,]+)['\"]/i;\n\n// Extraindo os valores\nconst pisMatch = pisRegex.exec(html);\nconst cofinsMatch = cofinsRegex.exec(html);\nconst ipiMatch = ipiRegex.exec(html);\nconst iiMatch = iiRegex.exec(html);\n\n// Retorna os valores encontrados\nreturn {\n  pis: pisMatch ? pisMatch[1] : null,\n  cofins: cofinsMatch ? cofinsMatch[1] : null,\n  ipi: ipiMatch ? ipiMatch[1] : null,\n  ii: iiMatch ? iiMatch[1] : null\n};\n"
      },
      "id": "1bc6aa17-2a93-44e8-8169-8b0e9c712507",
      "name": "RegexHTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        820
      ]
    },
    {
      "parameters": {},
      "id": "c1321dab-51d4-4916-b38b-e5fe2cab9d8d",
      "name": "mergeDataFromFilesGecexTipi",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        220,
        820
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4d294ebd-ebf5-4bd4-be17-35fbf9c6d586",
      "name": "convertToFile",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        860,
        660
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "chatInput",
        "options": {}
      },
      "id": "b2549be1-2415-4de2-811d-f41d22eb86ad",
      "name": "extractFromFile",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1060,
        660
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://flowise.interseas-caprover.startse.com/api/v1/prediction/2307d387-a1bb-4991-89ed-8bab8b599471",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "question",
              "value": "=II:{{ $('RegexHTML').all().last().json.ii }}%\nIPI:{{ $('RegexHTML').all().last().json.ipi }}%\nPIS:{{ $('RegexHTML').all().last().json.pis}}%\nCOFINS:{{ $('RegexHTML').all().last().json.cofins }}%\nAnexo IV:{{ $('Filter').all().last().json.isNotEmpty() }}\n\n{{ $('logicForFindingExceptions').first().json.hasException ? \"hasExeptionPrompt\" : \"dontHasExeptionPrompt\" }}-{{ $('extractFromFile').all().last().json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b92733de-e3c6-4cc8-a9ad-b33eba5b3a69",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "177ab562-c6a7-46fd-92d9-59be2ed5238c",
              "name": "output",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bf049aca-4996-4d6c-b0c1-dba9bda57188",
      "name": "responseFlowise",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1460,
        660
      ]
    }
  ],
  "pinData": {},
  "repo_name": "n8n-test",
  "repo_owner": "VitorNakagawaL",
  "repo_path": "workflows/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-16T15:50:17.549Z",
      "updatedAt": "2024-12-16T15:50:17.549Z",
      "id": "90BsZzaKRkurBY1q",
      "name": "Prod"
    },
    {
      "createdAt": "2025-02-05T19:24:04.517Z",
      "updatedAt": "2025-02-05T19:24:04.517Z",
      "id": "QjzCPV3nhLBek2xR",
      "name": "Análise Crítica"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-02-13T20:13:47.778Z",
  "versionId": "6ca69ff0-a236-444d-960c-c5d967c70d98"
}